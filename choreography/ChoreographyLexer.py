# Generated from choreography/Choreography.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,16,114,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,
        1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,8,
        1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,
        10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,12,4,12,82,8,12,11,12,12,
        12,83,1,13,4,13,87,8,13,11,13,12,13,88,1,13,1,13,4,13,93,8,13,11,
        13,12,13,94,3,13,97,8,13,1,14,1,14,5,14,101,8,14,10,14,12,14,104,
        9,14,1,14,1,14,1,15,4,15,109,8,15,11,15,12,15,110,1,15,1,15,0,0,
        16,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
        13,27,14,29,15,31,16,1,0,3,1,0,48,57,2,0,10,10,13,13,3,0,9,10,13,
        13,32,32,119,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,
        1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,
        1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
        1,0,0,0,0,31,1,0,0,0,1,33,1,0,0,0,3,38,1,0,0,0,5,40,1,0,0,0,7,44,
        1,0,0,0,9,46,1,0,0,0,11,48,1,0,0,0,13,50,1,0,0,0,15,55,1,0,0,0,17,
        57,1,0,0,0,19,59,1,0,0,0,21,66,1,0,0,0,23,75,1,0,0,0,25,81,1,0,0,
        0,27,86,1,0,0,0,29,98,1,0,0,0,31,108,1,0,0,0,33,34,5,109,0,0,34,
        35,5,111,0,0,35,36,5,118,0,0,36,37,5,101,0,0,37,2,1,0,0,0,38,39,
        5,40,0,0,39,4,1,0,0,0,40,41,5,97,0,0,41,42,5,108,0,0,42,43,5,108,
        0,0,43,6,1,0,0,0,44,45,5,44,0,0,45,8,1,0,0,0,46,47,5,41,0,0,47,10,
        1,0,0,0,48,49,5,59,0,0,49,12,1,0,0,0,50,51,5,115,0,0,51,52,5,121,
        0,0,52,53,5,110,0,0,53,54,5,99,0,0,54,14,1,0,0,0,55,56,5,123,0,0,
        56,16,1,0,0,0,57,58,5,125,0,0,58,18,1,0,0,0,59,60,5,114,0,0,60,61,
        5,101,0,0,61,62,5,112,0,0,62,63,5,101,0,0,63,64,5,97,0,0,64,65,5,
        116,0,0,65,20,1,0,0,0,66,67,5,115,0,0,67,68,5,101,0,0,68,69,5,116,
        0,0,69,70,5,95,0,0,70,71,5,102,0,0,71,72,5,114,0,0,72,73,5,112,0,
        0,73,74,5,115,0,0,74,22,1,0,0,0,75,76,5,119,0,0,76,77,5,97,0,0,77,
        78,5,105,0,0,78,79,5,116,0,0,79,24,1,0,0,0,80,82,7,0,0,0,81,80,1,
        0,0,0,82,83,1,0,0,0,83,81,1,0,0,0,83,84,1,0,0,0,84,26,1,0,0,0,85,
        87,7,0,0,0,86,85,1,0,0,0,87,88,1,0,0,0,88,86,1,0,0,0,88,89,1,0,0,
        0,89,96,1,0,0,0,90,92,5,46,0,0,91,93,7,0,0,0,92,91,1,0,0,0,93,94,
        1,0,0,0,94,92,1,0,0,0,94,95,1,0,0,0,95,97,1,0,0,0,96,90,1,0,0,0,
        96,97,1,0,0,0,97,28,1,0,0,0,98,102,5,35,0,0,99,101,8,1,0,0,100,99,
        1,0,0,0,101,104,1,0,0,0,102,100,1,0,0,0,102,103,1,0,0,0,103,105,
        1,0,0,0,104,102,1,0,0,0,105,106,6,14,0,0,106,30,1,0,0,0,107,109,
        7,2,0,0,108,107,1,0,0,0,109,110,1,0,0,0,110,108,1,0,0,0,110,111,
        1,0,0,0,111,112,1,0,0,0,112,113,6,15,0,0,113,32,1,0,0,0,7,0,83,88,
        94,96,102,110,1,6,0,0
    ]

class ChoreographyLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    INTEGER = 13
    DECIMAL = 14
    COMMENT = 15
    WS = 16

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'move'", "'('", "'all'", "','", "')'", "';'", "'sync'", "'{'", 
            "'}'", "'repeat'", "'set_frps'", "'wait'" ]

    symbolicNames = [ "<INVALID>",
            "INTEGER", "DECIMAL", "COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "INTEGER", "DECIMAL", 
                  "COMMENT", "WS" ]

    grammarFileName = "Choreography.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


